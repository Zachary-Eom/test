name: Weekly Commit Summary

on:
  schedule:
    - cron: '55 3 * * 1' # 매주 월요일 10:00 KST (UTC 기준 1시)
  workflow_dispatch:

jobs:
  summarize-and-notify-weekly:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set Date Range (Last Week)
        id: daterange
        run: |
          export TZ=Asia/Seoul
          START=$(date -d "last monday -7 days" +%Y-%m-%d)
          END=$(date -d "last monday" +%Y-%m-%d)
          echo "start=$START" >> $GITHUB_OUTPUT
          echo "end=$END" >> $GITHUB_OUTPUT

      - name: Fetch commits from last week
        id: commits
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          START="${{ steps.daterange.outputs.start }}T00:00:00Z"
          END="${{ steps.daterange.outputs.end }}T00:00:00Z"

          echo "Fetching commits from $START to $END..."
          COMMITS=$(gh api repos/${{ github.repository }}/commits --paginate)

          MESSAGES=$(echo "$COMMITS" | jq -r --arg start "$START" --arg end "$END" \
            '[.[] | select(.commit.author.date >= $start and .commit.author.date < $end) | .commit.message] | join("\n")'
          )

          echo "messages<<EOF" >> $GITHUB_ENV
          echo "$MESSAGES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Summarize with OpenAI
        id: summary
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Summarizing..."
          SUMMARY=$(curl -s https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "gpt-3.5-turbo",
              "messages": [
                {"role": "system", "content": "너는 개발자의 커밋 메시지를 요약해주는 도우미야."},
                {"role": "user", "content": "지난 주의 커밋들을 요약해줘:\n'"${{ env.messages }}"'"}
              ]
            }' | jq -r '.choices[0].message.content')

          echo "summary<<EOF" >> $GITHUB_ENV
          echo "$SUMMARY" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Send to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          echo "Sending summary to Slack..."
          curl -X POST -H 'Content-type: application/json' --data "{
            \"text\": \"📚 *지난 주 커밋 요약입니다!*\n\n${{ env.summary }}\"
          }" $SLACK_WEBHOOK_URL
